# This file was generated by GoReleaser. DO NOT EDIT.
cask "example-go-cask" do
  desc ""
  homepage ""
  version "0.0.7"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "example-go-cask"

  module GitHubHelper
    def self.get_asset_api_url(tag, name)
      require "utils/github"

      release = GitHub.get_release("sushichan044", "example-go-cask", tag)

      release["assets"].find { |asset| asset["name"] == name }["url"]
    end

    def self.token
      require "utils/github"

      @github_token = ENV["HOMEBREW_GITHUB_API_TOKEN"]

      unless @github_token
        @github_token = GitHub::API.credentials
        raise "Failed to retrieve token" if @github_token.nil? || @github_token.empty?
      end

      @github_token
    end
  end

  on_macos do
    url "#{GitHubHelper.get_asset_api_url("v0.0.7", "example-go-cask_Darwin_all.tar.gz")}",
        header: [
          "Accept: application/octet-stream",
          "Authorization: Bearer #{GitHubHelper.token}",
          "X-GitHub-Api-Version: 2022-11-28",
        ]
    sha256 "b23514f05dbc9c9e9b9e0b4aee044b799b96cdbf6087b23c478e56ec69a4f73e"
  end

  on_linux do
    on_intel do
      url "#{GitHubHelper.get_asset_api_url("v0.0.7", "example-go-cask_Linux_x86_64.tar.gz")}",
        header: [
          "Accept: application/octet-stream",
          "Authorization: Bearer #{GitHubHelper.token}",
          "X-GitHub-Api-Version: 2022-11-28",
        ]
      sha256 "75bcbb32975621d6013c41436d3503b95ec09c608e474c044f06d813c04861d8"
    end
    on_arm do
      url "#{GitHubHelper.get_asset_api_url("v0.0.7", "example-go-cask_Linux_arm64.tar.gz")}",
        header: [
          "Accept: application/octet-stream",
          "Authorization: Bearer #{GitHubHelper.token}",
          "X-GitHub-Api-Version: 2022-11-28",
        ]
      sha256 "eb86beb85299255c4575c5b4047e8ab01748138e1eb391823b0dbdb1178b4218"
    end
  end

  postflight do
    if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
      puts "Staged path: #{staged_path}}"

      system_command "/usr/bin/xattr", args: ["-d", "com.apple.quarantine", "#{staged_path}/#{token}"]
    end
  end

  # No zap stanza required
end
